import{_ as a,c as r,a as o,o as n}from"./app-BfdBOye_.js";const t={};function c(s,e){return n(),r("div",null,[...e[0]||(e[0]=[o('<blockquote><p><a href="https://www.electronjs.org/docs/latest/api/ipc-main" target="_blank" rel="noopener noreferrer">Protocol API</a> 是 Electron 提供的用于在渲染进程和主进程之间进行通信的机制。它允许我们发送异步和同步消息，并处理这些消息以实现复杂的交互功能。通过合适的封装，我们可以简化通信过程，提高代码的可维护性和可读性。与此同时，可以一套代码兼容 HTTP/2 协议，对于跨设备通信也非常有帮助。</p></blockquote><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>在 Electron 应用程序中，渲染进程和主进程之间的通信是一个常见的需求。Electron 提供了 <code>ipcMain</code> 和 <code>ipcRenderer</code> 模块来实现这一点。一方面，<code>ipcMain</code> 模块用于处理主进程的消息，而 <code>ipcRenderer</code> 模块用于处理渲染进程的消息。假如我想实现多台电脑之间的通信，或者说跨设备通信，这时候就需要考虑如何封装这些通信逻辑，使其既能在本地进程间通信，也能通过网络进行通信。那么 <code>ipcMain</code> 的方式就显得不太适用了。</p><p>虽然可以通过框架的封装实现业务逻辑分层，但如果能直接利用 Electron 提供的 <code>Protocol API</code>，将渲染进程和主进程的通信进行封装，使其既能支持本地通信，也能支持跨设备通信，将会大大简化开发过程。渲染进程可以大量复用已有解决方案，主进程只需要处理网络请求和响应即可。也为将来 Electron 应用页面进行云端部署提供了便利。</p><h2 id="封装通信逻辑" tabindex="-1"><a class="header-anchor" href="#封装通信逻辑"><span>封装通信逻辑</span></a></h2><h2 id="框架封装" tabindex="-1"><a class="header-anchor" href="#框架封装"><span>框架封装</span></a></h2><h2 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码"><span>示例代码</span></a></h2><h2 id="性能优化" tabindex="-1"><a class="header-anchor" href="#性能优化"><span>性能优化</span></a></h2><h2 id="安全考虑" tabindex="-1"><a class="header-anchor" href="#安全考虑"><span>安全考虑</span></a></h2><h2 id="结论" tabindex="-1"><a class="header-anchor" href="#结论"><span>结论</span></a></h2>',10)])])}const d=a(t,[["render",c]]),h=JSON.parse('{"path":"/article/y4dnj316/","title":"【Framework】基于 Electron Protocol API 实现渲染进程与主进程通信","lang":"zh-CN","frontmatter":{"title":"【Framework】基于 Electron Protocol API 实现渲染进程与主进程通信","tags":["electron","framework"],"createTime":"2025/09/13 22:41:39","permalink":"/article/y4dnj316/"},"readingTime":{"minutes":1.52,"words":456},"git":{"createdTime":1757953515000,"updatedTime":1757953515000,"contributors":[{"name":"Kaifuny","username":"Kaifuny","email":"16386583+Kaifuny@users.noreply.github.com","commits":1,"avatar":"https://avatars.githubusercontent.com/Kaifuny?v=4","url":"https://github.com/Kaifuny"}]},"filePathRelative":"blog/2025-09-14.md","headers":[],"categoryList":[{"id":"126ac9","sort":10000,"name":"blog"}]}');export{d as comp,h as data};
